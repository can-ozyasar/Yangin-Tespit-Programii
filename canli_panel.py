{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0319691b-61be-4019-b074-c67dcfbc8c1b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import requests\n",
    "import pandas as pd\n",
    "import folium\n",
    "import time\n",
    "import webbrowser\n",
    "from io import StringIO\n",
    "\n",
    "API_KEY = \"2ece47e141b71c73ecfe8f609c1f8c86\"\n",
    "SOURCE = \"VIIRS_SNPP_NRT\" \n",
    "COUNTRY = \"TUR\"\n",
    "DAYS = \"1\" \n",
    "REFRESH_RATE_SECONDS = 300\n",
    "\n",
    "def get_fire_data():\n",
    "    url = f\"https://firms.modaps.eosdis.nasa.gov/api/country/csv/{API_KEY}/{SOURCE}/{COUNTRY}/{DAYS}\"\n",
    "    print(f\"[{time.strftime('%H:%M:%S')}] NASA'dan güncel veri çekiliyor...\")\n",
    "    try:\n",
    "        response = requests.get(url, timeout=30)\n",
    "        if response.status_code == 200:\n",
    "            print(\"Veri başarıyla alındı.\")\n",
    "            return response.text\n",
    "        else:\n",
    "            print(f\"Hata! Durum Kodu: {response.status_code}\")\n",
    "            return None\n",
    "    except Exception as e:\n",
    "        print(f\"Veri çekme hatası: {e}\")\n",
    "        return None\n",
    "\n",
    "def create_map(fire_data_text):\n",
    "    if fire_data_text is None or len(fire_data_text.strip().splitlines()) <= 1:\n",
    "        print(\"Gösterilecek yangın verisi bulunamadı. Harita güncellenmiyor.\")\n",
    "        return\n",
    "\n",
    "    data_io = StringIO(fire_data_text)\n",
    "    df = pd.read_csv(data_io)\n",
    "\n",
    "    print(f\"{len(df)} nokta haritaya işleniyor...\")\n",
    "    turkiye_map = folium.Map(location=[39.925533, 32.866287], zoom_start=6)\n",
    "\n",
    "    for _, row in df.iterrows():\n",
    "        popup_text = f\"\"\"\n",
    "        <b>Tarih/Saat:</b> {row['acq_date']} {row['acq_time']}<br>\n",
    "        <b>Güven:</b> {row['confidence']}<br>\n",
    "        <b>Uydu:</b> {row['satellite']}\n",
    "        \"\"\"\n",
    "        folium.CircleMarker(\n",
    "            location=[row['latitude'], row['longitude']],\n",
    "            radius=5, color='red', fill=True, fill_color='red', fill_opacity=0.7,\n",
    "            popup=folium.Popup(popup_text, max_width=300)\n",
    "        ).add_to(turkiye_map)\n",
    "        \n",
    "    turkiye_map.save(\"alev_radari_canli.html\")\n",
    "    print(f\"[{time.strftime('%H:%M:%S')}] Harita 'alev_radari_canli.html' olarak güncellendi.\")\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    print(\"Alev Gözcüsü Canlı Panel Başlatılıyor...\")\n",
    "    initial_data = get_fire_data()\n",
    "    create_map(initial_data)\n",
    "    webbrowser.open(\"alev_radari_canli.html\")\n",
    "\n",
    "    while True:\n",
    "        print(f\"\\nSonraki güncelleme {REFRESH_RATE_SECONDS} saniye sonra...\")\n",
    "        time.sleep(REFRESH_RATE_SECONDS)\n",
    "        \n",
    "        data = get_fire_data()\n",
    "        create_map(data)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
